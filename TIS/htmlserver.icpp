#include "TIS.h"




	/*
	This code is modified from the standard code of Skylark static function
	*/
	SKYLARK(HTML, "html/**")
	{
		String file;
		Vector<String> params;
 		for(int i = 0; i < http.GetParamCount(); i++) params.Add(http[i]);
		if( http.GetParamCount() >0) file = Join(params,"/",true);
	
		// check caching
		if(SkylarkApp::Config().caching == 2 && file.StartsWith("ver")) {
			int q = file.Find('/');
			if(q >= 0)
				file = file.Mid(q + 1);
		}
	
		String path = GetFileOnPath(file, SkylarkApp::Config().path, false);
		if(!path.GetCount()) {
			http.Response(404, "Not found");
			return;
		}
		
		// check extension
		String ext = ToLower(GetFileExt(file));
		String type = "text";
		
		if(ext == ".css")
			type = "text/css";
		else
		if(ext == ".js")
			type = "text/javascript";
		else
		if(ext == ".png" || ext == ".jpg" || ext == ".gif")
			type = "image/" + ext.Mid(1);
		// Cache header if server is configured with caching flag
		if(SkylarkApp::Config().caching > 0) {
			String tag = IntStr64(FileGetTime(path).Get());
			http.SetHeader("Cache-Control", "public, max-age=2592000");
			http.SetHeader("ETag", tag);
			if(http.GetHeader("if-none-match") == tag){
				http.Response(304, "Not Modified");
				return;
			}
		}
		
		http.Content(type, LoadFile(path));
	}
	
	
